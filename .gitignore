# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class
# Backup files
*_backup.py
*_clean.py

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# Project-specific ignores

# Database files
*.db
*.sqlite
*.sqlite3
clockko.db

# Environment variables
.env
.env.local
.env.production
.env.development

# IDE files
.vscode/
.idea/
*.swp
*.swo
*~

# OS files
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# Temporary files
*.tmp
*.temp
*~

# Log files
*.log
logs/

# Test files that are temporary
test_*.py
check_*.py
debug_*.py
diagnose_*.py
minimal_test.py
simple_test.py
final_test.py
cleanup_*.py
fix_*.py
setup_*.py
*_test.py
*_tests.py

# Email configuration debug files
email_setup_guide.py
postgres_setup_guide.py
install_guide.py

# Database utility scripts
db_utils.py
migrate_db.py
create_db.py
safe_user_service.py

# Server startup files
start_server.bat
start_server.py
hello.py
run.py

# Documentation files that are for development only
DATABASE_SETUP.md
EMAIL_OTP_SETUP.md
POSTGRESQL_SETUP.md

# Alembic version files (keep structure but ignore generated migrations if needed)
# alembic/versions/*.py

# Docker files for development
docker-compose.yml
Dockerfile

# Backup files
*.bak
*.backup
